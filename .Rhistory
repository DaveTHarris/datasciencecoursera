library(dplyr)
library(dpylr)
install.packages("dplyr")
library("dplyr")
head(mtcars)
mtcars
str(mtcars)
arrange(mtcars, cyl)
mtcars
A<-arrange(mtcars,cyl)
A
summary(A)
mtcars$carname<-rownames(mtcars)
str(mtcars)
head(mtcars)
carMelt<-melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
library(reshape2)
carMelt<-melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
carMelt
head(carMelt, n=3)
tail(carMelt, n=3)
arrange(carMelt,cyl)
arrange(carMelt,variable,cyl)
dcast(carMelt, cyl ~ variable)
dcast(carMelt, cyl ~ variable,mean)
dcast(carMelt, cyl ~ variable,max)
head(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray, sum)
tapply(InsectSprays$count, InsectSprays$spray, sum)
tapply(InsectSprays$count, InsectSprays$spray, sum)
spIns<-split(InsectSprays$count, InsectSprays$spray)
head(spIns)
sprCount<-lapply(spIns, sum)
sprCount
unlist(sprCount)
sapply(spIns, sum)
mtcars
head(mtcars, n =3)
newmtcars<-cbind(mtcars$carname,mtcars$cyl,mtcars$hp)
head(newmtcars)
instal.packages(plyr)
install.packages(plyr)
install.packages("plyr")
library("plyr")
ddply()
ddply(InsectSprays,.(spray),summarize, sum=sum(count))
head(InsectSprays,n=3)
tail(InsectSprays,n=3)
ddply(InsectDSprays,.(spray,summarize, sum=sum(count)))
ddply(InsectSprays,.(spray,summarize, sum=sum(count)))
ddply(InsectSprays,.(spray),summarize, sum=sum(count)))
ddply(InsectSprays,.(spray),summarize, sum=sum(count))
head(mtcars)
mtcars4<-mtcars[mtcars$cyl==4,]
mtcars4
spmtCars<-split(mtcars,cyl)
spmtCars<-split(mtcars,mtcars$cyl)
spmtCars
help(ave)
head(zoo)
library(zoo)
require(zoo)
head(mtcars,n=3)
mtcarsMPG<-arrange(mtcars,mtcars$mpg)
head(mtcarsMPG)
tail(mtcarsMPG)
help(table)
table(cyl,carb)
table(mtcarsMPG$cyl,mtcarsMPG$carb)
mtcars[mtcars$cyl==6 & mtcars$carb ==1,]
mtcarsAb<-mtcars[,mtcars$mpg mtcars$cyl]
mtcarsAb<-mtcars[,c(mtcars$mpg, mtcars$cyl)]
mtcarsAb<-mtcars[,c(mtcars$mpg, mtcars$cyl)]
mtcarsAb<-mtcars[,c("mpg", "cyl")]
mtcarsAb
head(mtcars,n=3)
mtcartest<-ddply(mtcars,cyl, transform, meanHP = mean(hp))
mtcartest<-ddply(mtcars,"cyl", transform, meanHP = mean(hp))
head(mtcartest, n=7)
tail(mtcartest,n=7)
mtcartest<-ddply(mtcars,"carb", hp.mean = mean(hp))
head(mtcartest, n=6)
mtcartest<-ddply(mtcars,"carb", transform, hp.mean = mean(hp))
head(mtcartest,n=6)
mtcarssub<-subset(mtcars,cyl>4)
mtcarssub
plot(mtcars,cyl~hp)
plot(mtcars$cyl~mtcars$hp)
plot(mtcars$cyl,mtcars$hp)
ablines(h=mean(mtcars$hp))
abline(h=mean(mtcars$hp))
abline(h=tapply(mtcars$hp,mtcars$cyl,mean))
abline(h=tapply(mtcars$hp,mtcars$cyl,mean),col=1:3)
abline(h=tapply(mtcars$hp,mtcars$cyl,mean),col=2:4)
plot(mtcars$cyl,mtcars$hp)
abline(h=tapply(mtcars$hp,mtcars$cyl,mean),col=2:4)
lm.cyl<-lm(mtcars$cyl ~ mtcars$hp)
plot(lm.cyl)
plot(mtcars$cyl,mtcars$hp)
abline(lm(mtcars$cyl ~mtcars$hp))
abline(lm(mtcars$hp ~mtcars$cyl))
library(swirl)
ls()
rm(list=ls())
swirl()
install_from_swirl("R Programming")
swirl()
5 + 7
x<-5 + 7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R", 'folder1', 'folder2')
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2","destdir3"),recursive+ TRUE)
dir.create(file.path("testdir2","destdir3"),recursive = TRUE)
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = true)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name<-c(my_char,"Dave")
my_name
paste(my_name,collapse = " ")
paste("Hello", "world!", sep = " ")
paste([1:3],c("X","Y","Z"), sep = "")
paste(1:3,c("X","Y","Z"), sep = "")
paste(LETTERS,1:4, sep = "~")
paste(LETTERS,1:4, sep = "-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2<- c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector<-c(4,5))
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
matrix(1:20, nrow = 4, ncol =5)
my_matrix2<-matrix(1:20, nrow=4, ncol=5)
identical(my_matrix,my_matrix2)
patients<-(c("Bill","Gina","Kelly","Sean")
)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 || 6 !=8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6, !FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submiit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num = 5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd,C(1.4, 3.6, 7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Hello there")
submit()
mad_libs("Baltimore","hairy", "cartoon")
submit()
"I"%p%"love"%p%"R!"
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range())
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeri(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, n=10)
tail(plants, n=15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips<-sample(1:100, c(0,1), c(0.3, 0.7))
flips<-sample(1:100, c(0,1), replace=TRUE, c(0.3, 0.7))
flips<-sample(1:100, c(0,1), replace=TRUE, prob = c(0.3, 0.7))
flips<-sample(c(0,1),100, replace=TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
rbinom(100, size=1, prob=0.7)
flips2<-rbinom(100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
rpois(5, mean = 10)
?rpois
rpois(5,10)
my_pois<-replicate(100, rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Data()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()<t1
Sys.time()>t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y = cars$dist)
plot(x=cars$dist,y=cars$speed)
?plot
plot(x=cars$speed,y=cars$dist, xlab = "Speed")
plot(x=cars$speed,y=cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x=cars$speed,y=cars$dist, ylab = "Stopping Distance")
plot(x=cars$speed,y=cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist, main="My Plot")
plot(cars, main = "My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col =2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
data(mtcars)
?boxplot
boxplot(formula=mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("C:/Users/Dave/Downloads/shiny_0.12.0.zip", repos = NULL)
install.packages("shiny")
